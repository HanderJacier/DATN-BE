package DATN.config;

import java.io.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class CustomDatabaseCreator {

    private static final String FLAG_FILE = "dev.flag";

    public static void createDatabaseIfNotExists() {
        String username;
        String password;

        // N·∫øu ƒë√£ t·∫°o user r·ªìi, d√πng t√†i kho·∫£n DEV_BACKEND
        if (new File(FLAG_FILE).exists()) {
            username = "DEV_BACKEND";
            password = "DEV";
            System.out.println("üîÅ S·ª≠ d·ª•ng t√†i kho·∫£n DEV_BACKEND ƒë·ªÉ k·∫øt n·ªëi.");
        } else {
            // N·∫øu ch∆∞a, h·ªèi t√†i kho·∫£n ban ƒë·∫ßu (v√≠ d·ª•: sa/123)
            Scanner scanner = new Scanner(System.in);
            System.out.print("Nh·∫≠p t√†i kho·∫£n SQL Server (v√≠ d·ª•: sa): ");
            username = scanner.nextLine();
            System.out.print("Nh·∫≠p m·∫≠t kh·∫©u: ");
            password = scanner.nextLine();
        }

        String masterUrl = "jdbc:sqlserver://localhost:1433;databaseName=master;encrypt=false;";

        try (Connection conn = DriverManager.getConnection(masterUrl, username, password);
                Statement stmt = conn.createStatement()) {

            String sqlScript = readSqlFile("/database/DATN_WebBHDT.sql");

            for (String sql : sqlScript.split("(?i)\\bGO\\b")) {
                if (!sql.trim().isEmpty()) {
                    stmt.execute(sql);
                }
            }

            System.out.println("‚úÖ ƒê√£ th·ª±c thi file SQL th√†nh c√¥ng.");

            // Ghi flag n·∫øu l√† l·∫ßn ƒë·∫ßu
            if (!new File(FLAG_FILE).exists()) {
                try (FileWriter writer = new FileWriter(FLAG_FILE)) {
                    writer.write("USER_CREATED=true");
                    System.out.println("üìå ƒê√£ l∆∞u tr·∫°ng th√°i: DEV_BACKEND ƒë√£ ƒë∆∞·ª£c t·∫°o.");
                }
            }

        } catch (Exception e) {
            System.err.println("‚ùå L·ªói khi th·ª±c thi SQL: " + e.getMessage());
        }
    }

    private static String readSqlFile(String path) throws Exception {
        InputStream inputStream = CustomDatabaseCreator.class.getResourceAsStream(path);
        if (inputStream == null) {
            throw new RuntimeException("Kh√¥ng t√¨m th·∫•y file: " + path);
        }

        BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
        StringBuilder sqlBuilder = new StringBuilder();
        String line;

        while ((line = reader.readLine()) != null) {
            sqlBuilder.append(line).append("\n");
        }

        return sqlBuilder.toString();
    }
}
